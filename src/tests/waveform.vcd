$version Generated by VerilatedVcd $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire 32 y a [31:0] $end
  $var wire 32 z b [31:0] $end
  $var wire 32 { c [31:0] $end
  $var wire  1 u clk $end
  $var wire  4 x instruction [3:0] $end
  $var wire 32 | internal_data_in [31:0] $end
  $var wire  1 w load $end
  $var wire 32 } out_to_switch [31:0] $end
  $var wire  1 v reset $end
  $scope module PE $end
   $var wire 32 y a [31:0] $end
   $var wire 32 % a_input_pins[0] [31:0] $end
   $var wire 32 & a_input_pins[1] [31:0] $end
   $var wire 32 ' a_input_pins[2] [31:0] $end
   $var wire 32 ( a_input_pins[3] [31:0] $end
   $var wire 32 ) a_input_pins[4] [31:0] $end
   $var wire 32 * a_input_pins[5] [31:0] $end
   $var wire 32 z b [31:0] $end
   $var wire 32 + b_input_pins[0] [31:0] $end
   $var wire 32 , b_input_pins[1] [31:0] $end
   $var wire 32 - b_input_pins[2] [31:0] $end
   $var wire 32 . b_input_pins[3] [31:0] $end
   $var wire 32 / b_input_pins[4] [31:0] $end
   $var wire 32 0 b_input_pins[5] [31:0] $end
   $var wire 32 { c [31:0] $end
   $var wire 32 1 c_input_pins[0] [31:0] $end
   $var wire 32 2 c_input_pins[1] [31:0] $end
   $var wire 32 3 c_input_pins[2] [31:0] $end
   $var wire 32 4 c_input_pins[3] [31:0] $end
   $var wire 32 5 c_input_pins[4] [31:0] $end
   $var wire 32 6 c_input_pins[5] [31:0] $end
   $var wire  1 u clk $end
   $var wire  4 $ configuration [3:0] $end
   $var wire  4 x instruction [3:0] $end
   $var wire 32 | internal_data_in [31:0] $end
   $var wire 32 # internal_register [31:0] $end
   $var wire  1 w load $end
   $var wire 32 7 out_pins[0] [31:0] $end
   $var wire 32 8 out_pins[1] [31:0] $end
   $var wire 32 9 out_pins[2] [31:0] $end
   $var wire 32 : out_pins[3] [31:0] $end
   $var wire 32 ; out_pins[4] [31:0] $end
   $var wire 32 < out_pins[5] [31:0] $end
   $var wire 32 } out_to_switch [31:0] $end
   $var wire  1 v reset $end
   $scope module fa $end
    $var wire  8 D finalExp [7:0] $end
    $var wire 24 G finalMant [23:0] $end
    $var wire  1 A finalSign $end
    $var wire 32 I i [31:0] $end
    $var wire  1 @ largerMag $end
    $var wire 32 = num1 [31:0] $end
    $var wire  8 B num1Exp [7:0] $end
    $var wire 24 E num1Mant [23:0] $end
    $var wire 32 > num2 [31:0] $end
    $var wire  8 C num2Exp [7:0] $end
    $var wire 24 F num2Mant [23:0] $end
    $var wire 32 ? out_num [31:0] $end
    $var wire 25 H sumMants [24:0] $end
   $upscope $end
   $scope module fm $end
    $var wire  8 N expF [7:0] $end
    $var wire 32 T i [31:0] $end
    $var wire 23 O mantissa [22:0] $end
    $var wire 24 P mantissa1 [23:0] $end
    $var wire 24 Q mantissa2 [23:0] $end
    $var wire 48 R mantissaProd [47:0] $end
    $var wire 32 J num1 [31:0] $end
    $var wire 32 K num2 [31:0] $end
    $var wire 32 L out_mul [31:0] $end
    $var wire  1 M sign $end
   $upscope $end
   $scope module fma2 $end
    $var wire 32 U a_fp [31:0] $end
    $var wire 32 V b_fp [31:0] $end
    $var wire 32 W c_fp [31:0] $end
    $var wire  8 [ exp_out [7:0] $end
    $var wire  8 \ final_exp [7:0] $end
    $var wire 24 a final_mantissa [23:0] $end
    $var wire  1 Z largerMag $end
    $var wire 24 ] mantissa_a [23:0] $end
    $var wire 24 ^ mantissa_b [23:0] $end
    $var wire 24 _ mantissa_c [23:0] $end
    $var wire 24 ` mantissa_mul_norm [23:0] $end
    $var wire 48 b mantissa_mul_out [47:0] $end
    $var wire 32 X out_fp [31:0] $end
    $var wire  1 Y sign_out $end
    $var wire 25 d sum_mants [24:0] $end
   $upscope $end
   $scope module systolic_fma $end
    $var wire 32 e a_fp [31:0] $end
    $var wire 32 f b_fp [31:0] $end
    $var wire 32 g c_fp [31:0] $end
    $var wire  8 k exp_out [7:0] $end
    $var wire  8 l final_exp [7:0] $end
    $var wire 24 q final_mantissa [23:0] $end
    $var wire  1 j largerMag $end
    $var wire 24 m mantissa_a [23:0] $end
    $var wire 24 n mantissa_b [23:0] $end
    $var wire 24 o mantissa_c [23:0] $end
    $var wire 24 p mantissa_mul_norm [23:0] $end
    $var wire 48 r mantissa_mul_out [47:0] $end
    $var wire 32 h out_fp [31:0] $end
    $var wire  1 i sign_out $end
    $var wire 25 t sum_mants [24:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000000000 #
b0000 $
b00000000000000000000000000000000 %
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 -
b00000000000000000000000000000000 .
b00000000000000000000000000000000 /
b00000000000000000000000000000000 0
b00000000000000000000000000000000 1
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b01000000100000000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b00000000000000000000000000000000 ?
0@
1A
b00000000 B
b00000000 C
b00000000 D
b100000000000000000000000 E
b100000000000000000000000 F
b000000000000000000000000 G
b1000000000000000000000000 H
b00000000000000000000000000011000 I
b00000000000000000000000000000000 J
b00000000000000000000000000000000 K
b01000000100000000000000000000000 L
0M
b10000001 N
b00000000000000000000000 O
b100000000000000000000000 P
b100000000000000000000000 Q
b100000000000000000000000000000000000000000000000 R
b00000000000000000000000000011000 T
b00000000000000000000000000000000 U
b00000000000000000000000000000000 V
b00000000000000000000000000000000 W
b00000000000000000000000000000000 X
1Y
0Z
b00000000 [
b00000000 \
b000000000000000000000000 ]
b000000000000000000000000 ^
b000000000000000000000000 _
b000000000000000000000000 `
b000000000000000000000000 a
b000000000000000000000000000000000000000000000000 b
b0000000000000000000000000 d
b00000000000000000000000000000000 e
b00000000000000000000000000000000 f
b00000000000000000000000000000000 g
b00000000000000000000000000000000 h
1i
0j
b00000000 k
b00000000 l
b000000000000000000000000 m
b000000000000000000000000 n
b000000000000000000000000 o
b000000000000000000000000 p
b000000000000000000000000 q
b000000000000000000000000000000000000000000000000 r
b0000000000000000000000000 t
0u
0v
1w
b0010 x
b00000000000000000000000000000000 y
b00000000000000000000000000000000 z
b00000000000000000000000000000000 {
b01000010000100100011011001000110 |
b00000000000000000000000000000000 }
#1
b01000010000100100011011001000110 #
b0010 $
1u
#2
0u
#3
1u
#4
0u
#5
1u
#6
0u
#7
1u
#8
0u
#9
1u
#10
0u
#11
b01000000110110011111101111100111 '
b01000001100100001111101111100111 -
b01000010000000001101100001000101 3
b01000011000110111010101001000001 9
b01000000110110011111101111100111 e
b01000001100100001111101111100111 f
b01000010000000001101100001000101 g
b01000011000110111010101001000001 h
b10000101 k
b10000110 l
b110110011111101111100111 m
b100100001111101111100111 n
b010000000110110000100010 o
b111101101110100001100000 p
b001101110101010010000010 q
b011110110111010000110000100111011100101001110001 r
b1001101110101010010000010 t
1u
0w
b01000000110110011111101111100111 y
b01000001100100001111101111100111 z
b01000010000000001101100001000101 {
#12
0u
#13
1u
b01000011000110111010101001000001 }
#14
0u
#15
1u
#16
0u
#17
1u
#18
0u
#19
1u
#20
0u
#21
1u
#22
0u
#23
1u
#24
0u
#25
1u
#26
0u
#27
1u
#28
0u
#29
1u
#30
0u
#31
1u
#32
0u
#33
1u
#34
0u
#35
1u
#36
0u
#37
1u
#38
0u
#39
1u
#40
0u
#41
1u
#42
0u
#43
1u
#44
0u
#45
1u
#46
0u
#47
1u
#48
0u
#49
1u
